# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sun Mar  7 01:19:37 2010

import wx
import os
import re
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class AboutFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AboutFrame.__init__
        kwds["style"] = wx.FRAME_FLOAT_ON_PARENT | wx.CAPTION | wx.FRAME_TOOL_WINDOW
        wx.Frame.__init__(self, *args, **kwds)
        self.sizer_10_staticbox = wx.StaticBox(self, -1, u"Créditos")
        self.bitmap_1 = wx.StaticBitmap(self, -1, wx.Bitmap("icons/80287.jpg", wx.BITMAP_TYPE_ANY))
        self.label_1 = wx.StaticText(self, -1, "FPU Inspector version" + get_svn_revision())
        self.label_2 = wx.StaticText(self, -1, u"Un software para el estudio del comportamiento de\nla Unidad de Punto Flotante\n\nTrabajo Final de la asignatura Sistemas de Computación\nIngeniería en Computación - FCEFyN\nUniversidad Nacional de Córdoba\n", style=wx.ALIGN_CENTRE)
        self.label_3 = wx.StaticText(self, -1, "Realizado en marzo de 2010 - Licencia GNU v3\nProf Ing. Miguel Solinas\n\nhttp://code.google.com/p/fpuinspector", style=wx.ALIGN_CENTRE)
        self.text_ctrl_1 = wx.TextCtrl(self, -1, u"Martín Gaitán   <gaitan@gmail.com>\nJorge Saffe   <jorgesaffe@gmail.com>", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.TE_RICH|wx.TE_AUTO_URL)
        self.button_1 = wx.Button(self, -1, "Cerrar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.actionCloseAbout, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AboutFrame.__set_properties
        self.SetTitle("Acerca de FPU Inspector")
        self.label_1.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AboutFrame.__do_layout
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.StaticBoxSizer(self.sizer_10_staticbox, wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_5.Add(self.bitmap_1, 0, 0, 0)
        sizer_9.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_9.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_9.Add(self.label_3, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_5.Add(sizer_9, 1, wx.EXPAND, 0)
        sizer_10.Add(self.text_ctrl_1, 1, wx.BOTTOM|wx.EXPAND, 0)
        sizer_5.Add(sizer_10, 0, wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer_5)
        sizer_5.Fit(self)
        self.Layout()
        # end wxGlade
        self.Centre()

    def actionCloseAbout(self, event): # wxGlade: AboutFrame.<event_handler>
        self.Show(False)
        self.Destroy()
        

# end of class AboutFrame

def get_svn_revision(path=None):
    rev = None
    if path is None:
        path = os.path.dirname( __file__ )# __path__[0]
    
    entries_path = '%s/.svn/entries' % path

    if os.path.exists(entries_path):
        entries = open(entries_path, 'r').read()
        # Versions >= 7 of the entries file are flat text.  The first line is
        # the version number. The next set of digits after 'dir' is the revision.
        if re.match('(\d+)', entries):
            rev_match = re.search('\d+\s+dir\s+(\d+)', entries)
            if rev_match:
                rev = rev_match.groups()[0]
        # Older XML versions of the file specify revision as an attribute of
        # the first entries node.
        else:
            from xml.dom import minidom
            dom = minidom.parse(entries_path)
            rev = dom.getElementsByTagName('entry')[0].getAttribute('revision')

    if rev:
        return u' SVN-%s' % rev
    return u'1.0'

